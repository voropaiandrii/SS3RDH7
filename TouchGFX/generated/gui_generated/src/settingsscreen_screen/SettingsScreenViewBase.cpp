/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/settingsscreen_screen/SettingsScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

SettingsScreenViewBase::SettingsScreenViewBase() :
    buttonCallback(this, &SettingsScreenViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &SettingsScreenViewBase::sliderValueChangedCallbackHandler)
{

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    SettingsBackgroundTiledImage1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND2_ID));
    SettingsBackgroundTiledImage1.setPosition(0, 0, 800, 480);
    SettingsBackgroundTiledImage1.setOffset(0, 0);

    textArea1.setXY(214, 13);
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(250, 247, 247));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID24));

    textArea2.setXY(233, 118);
    textArea2.setColor(touchgfx::Color::getColorFrom24BitRGB(250, 247, 247));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID27));

    dayTextArea.setXY(55, 240);
    dayTextArea.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 249, 249));
    dayTextArea.setLinespacing(0);
    dayTextArea.setTypedText(touchgfx::TypedText(T_SINGLEUSEID32));

    textMonthArea.setXY(155, 240);
    textMonthArea.setColor(touchgfx::Color::getColorFrom24BitRGB(250, 245, 245));
    textMonthArea.setLinespacing(0);
    textMonthArea.setTypedText(touchgfx::TypedText(T_SINGLEUSEID33));

    yearTextArea.setXY(240, 240);
    yearTextArea.setColor(touchgfx::Color::getColorFrom24BitRGB(245, 236, 236));
    yearTextArea.setLinespacing(0);
    yearTextArea.setTypedText(touchgfx::TypedText(T_SINGLEUSEID36));

    hoursTextArea.setXY(495, 240);
    hoursTextArea.setColor(touchgfx::Color::getColorFrom24BitRGB(250, 244, 244));
    hoursTextArea.setLinespacing(0);
    hoursTextArea.setTypedText(touchgfx::TypedText(T_SINGLEUSEID37));

    minutesTextArea.setXY(595, 240);
    minutesTextArea.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 252, 252));
    minutesTextArea.setLinespacing(0);
    minutesTextArea.setTypedText(touchgfx::TypedText(T_SINGLEUSEID38));

    secondsTextArea.setXY(695, 240);
    secondsTextArea.setColor(touchgfx::Color::getColorFrom24BitRGB(247, 244, 244));
    secondsTextArea.setLinespacing(0);
    secondsTextArea.setTypedText(touchgfx::TypedText(T_SINGLEUSEID39));

    cancelSettingsButton.setXY(110, 391);
    cancelSettingsButton.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    cancelSettingsButton.setLabelText(touchgfx::TypedText(T_SINGLEUSEID46));
    cancelSettingsButton.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    cancelSettingsButton.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    cancelSettingsButton.setAction(buttonCallback);

    saveSettingsButton.setXY(525, 391);
    saveSettingsButton.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    saveSettingsButton.setLabelText(touchgfx::TypedText(T_SINGLEUSEID47));
    saveSettingsButton.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    saveSettingsButton.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    decreaseDayButton.setXY(50, 289);
    decreaseDayButton.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
    decreaseDayButton.setIconXY(14, 21);

    increaseDayButton.setXY(50, 180);
    increaseDayButton.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
    increaseDayButton.setIconXY(14, 21);

    decreaseMonthButton.setXY(150, 289);
    decreaseMonthButton.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
    decreaseMonthButton.setIconXY(14, 21);

    increaseMonthButton.setXY(150, 180);
    increaseMonthButton.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
    increaseMonthButton.setIconXY(14, 21);

    decreaseYearButton.setXY(261, 289);
    decreaseYearButton.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
    decreaseYearButton.setIconXY(14, 21);

    increaseYearButton.setXY(261, 180);
    increaseYearButton.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
    increaseYearButton.setIconXY(14, 21);

    decreaseHoursButton.setXY(490, 289);
    decreaseHoursButton.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
    decreaseHoursButton.setIconXY(14, 21);

    increaseHoursButton.setXY(490, 180);
    increaseHoursButton.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
    increaseHoursButton.setIconXY(14, 21);

    decreaseMinutesButton.setXY(590, 289);
    decreaseMinutesButton.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
    decreaseMinutesButton.setIconXY(15, 21);

    increaseMinutesButton.setXY(590, 180);
    increaseMinutesButton.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
    increaseMinutesButton.setIconXY(14, 21);

    decreaseSecondsButton.setXY(690, 289);
    decreaseSecondsButton.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
    decreaseSecondsButton.setIconXY(14, 21);

    increaseSecondsButton.setXY(690, 180);
    increaseSecondsButton.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
    increaseSecondsButton.setIconXY(14, 21);

    screenBrightnessSlider.setXY(59, 50);
    screenBrightnessSlider.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_SLIDER_HORIZONTAL_LARGE_SLIDER_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_DARK_SLIDER_HORIZONTAL_LARGE_SLIDER_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_DARK_SLIDER_HORIZONTAL_LARGE_INDICATORS_SLIDER_ROUND_NOB_ID));
    screenBrightnessSlider.setupHorizontalSlider(5, 24, 0, 0, 615);
    screenBrightnessSlider.setValueRange(0, 100);
    screenBrightnessSlider.setValue(0);
    screenBrightnessSlider.setNewValueCallback(sliderValueChangedCallback);

    navigationMenu1.setXY(0, 0);

    add(__background);
    add(SettingsBackgroundTiledImage1);
    add(textArea1);
    add(textArea2);
    add(dayTextArea);
    add(textMonthArea);
    add(yearTextArea);
    add(hoursTextArea);
    add(minutesTextArea);
    add(secondsTextArea);
    add(cancelSettingsButton);
    add(saveSettingsButton);
    add(decreaseDayButton);
    add(increaseDayButton);
    add(decreaseMonthButton);
    add(increaseMonthButton);
    add(decreaseYearButton);
    add(increaseYearButton);
    add(decreaseHoursButton);
    add(increaseHoursButton);
    add(decreaseMinutesButton);
    add(increaseMinutesButton);
    add(decreaseSecondsButton);
    add(increaseSecondsButton);
    add(screenBrightnessSlider);
    add(navigationMenu1);
}

void SettingsScreenViewBase::setupScreen()
{
    navigationMenu1.initialize();
}

void SettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &cancelSettingsButton)
    {
        //Interaction1
        //When cancelSettingsButton clicked change screen to MainScreen
        //Go to MainScreen with no screen transition
        application().gotoMainScreenScreenNoTransition();
    }
}

void SettingsScreenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &screenBrightnessSlider)
    {
        //ScreenBrightnessChanged
        //When screenBrightnessSlider value changed call virtual function
        //Call screenBrightnessChanged
        screenBrightnessChanged(value);
    }
}
